This XML file does not appear to have any style information associated with it. The document tree is shown below.
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:podcast="https://podcastindex.org/namespace/1.0" version="2.0">
    <channel>
        <title>Go Time: Golang, Software Engineering</title>
        <copyright>All rights reserved</copyright>
        <link>https://changelog.com/gotime</link>
        <atom:link href="https://changelog.com/gotime/feed" rel="self" type="application/rss+xml"/>
        <atom:link href="https://changelog.com/gotime" rel="alternate" type="text/html"/>
        <language>en-us</language>
        <description>Your source for diverse discussions from around the Go community. This show records LIVE every Tuesday at 3pm US Eastern. Join the Golang community and chat with us during the show in the #gotimefm channel of Gophers slack. Panelists include Mat Ryer, Jon Calhoun, Natalie Pistunovich, Johnny Boursiquot, Angelica Hill, Kris Brandow, and Ian Lopshire. We discuss cloud infrastructure, distributed systems, microservices, Kubernetes, Docker… oh and also Go! Some people search for GoTime or GoTimeFM and can’t find the show, so now the strings GoTime and GoTimeFM are in our description too. </description>
        <itunes:author>Changelog Media</itunes:author>
        <itunes:summary>Your source for diverse discussions from around the Go community. This show records LIVE every Tuesday at 3pm US Eastern. Join the Golang community and chat with us during the show in the #gotimefm channel of Gophers slack. Panelists include Mat Ryer, Jon Calhoun, Natalie Pistunovich, Johnny Boursiquot, Angelica Hill, Kris Brandow, and Ian Lopshire. We discuss cloud infrastructure, distributed systems, microservices, Kubernetes, Docker… oh and also Go! Some people search for GoTime or GoTimeFM and can’t find the show, so now the strings GoTime and GoTimeFM are in our description too. </itunes:summary>
        <itunes:explicit>no</itunes:explicit>
        <itunes:image href="https://cdn.changelog.com/uploads/covers/go-time-original.png?v=63725770357"/>
        <itunes:keywords>go, golang, open source, software, development, devops, architecture, docker, kubernetes</itunes:keywords>
        <itunes:category text="Technology">
            <itunes:category text="Software How-To"/>
            <itunes:category text="Tech News"/>
        </itunes:category>
        <podcast:funding url="https://changelog.com/++">Support our work by joining Changelog++</podcast:funding>
        <podcast:person role="host" img="https://cdn.changelog.com/uploads/avatars/people/lbY/avatar_large.jpg?v=63764553668" href="https://changelog.com/person/matryer">Mat Ryer</podcast:person>
        <podcast:person role="host" img="https://cdn.changelog.com/uploads/avatars/people/wwOp4/avatar_large.jpg?v=63772335237" href="https://changelog.com/person/angelicahill">Angelica Hill</podcast:person>
        <podcast:person role="host" img="https://cdn.changelog.com/uploads/avatars/people/Qyme/avatar_large.jpg?v=63758939850" href="https://changelog.com/person/skriptble">Kris Brandow</podcast:person>
        <podcast:person role="host" img="https://cdn.changelog.com/uploads/avatars/people/yWWz5/avatar_large.jpg?v=63779509228" href="https://changelog.com/person/ianlopshire">Ian Lopshire</podcast:person>
        <item>
            <title>The bits of Go we avoid (and why)</title>
            <link>https://changelog.com/gotime/269</link>
            <guid isPermaLink="false">changelog.com/2/2025</guid>
            <pubDate>Thu, 16 Mar 2023 16:30:00 +0000</pubDate>
            <enclosure url="https://op3.dev/e/https://cdn.changelog.com/uploads/gotime/269/go-time-269.mp3" length="58501595" type="audio/mpeg"/>
            <description>The panel discuss the parts of Go they never use. Do they avoid them because of pain in the past? Were they overused? Did they always end up getting refactoring out? Is there a preferred alternative? </description>
            <content:encoded>
                <![CDATA[ <p>The panel discuss the parts of Go they never use. Do they avoid them because of pain in the past? Were they overused? Did they always end up getting refactoring out? Is there a preferred alternative?</p> <p><a href="https://changelog.com/gotime/269/discuss">Discuss on Changelog News</a></p> <p><a href="https://changelog.com/++" rel="payment">Changelog++</a> members support our work, get closer to the metal, and make the ads disappear. Join today!</p> <p>Sponsors:</p> <p><ul> <li><a href="https://fastly.com/">Fastly</a> – <strong>Our bandwidth partner.</strong> Fastly powers fast, secure, and scalable digital experiences. Move beyond your content delivery network to their powerful edge cloud platform. Learn more at <a href="https://www.fastly.com/?utm_source=changelog&amp;utm_medium=podcast&amp;utm_campaign=changelog-sponsorship">fastly.com</a> </li><li><a href="https://fly.io/changelog">Fly.io</a> – <strong>The home of Changelog.com</strong> — Deploy your apps and databases close to your users. In minutes you can run your Ruby, Go, Node, Deno, Python, or Elixir app (and databases!) all over the world. No ops required. Learn more at <a href="https://fly.io/changelog">fly.io/changelog</a> and check out <a href="https://fly.io/docs/speedrun/">the speedrun in their docs</a>. </li> </ul></p> <p>Featuring:</p> <p><ul><li>Mat Ryer &ndash; <a href="https://twitter.com/matryer" rel="external ugc">Twitter</a>, <a href="https://github.com/matryer" rel="external ugc">GitHub</a>, <a href="https://www.linkedin.com/in/matryer" rel="external ugc">LinkedIn</a>, <a href="http://matryer.com/" rel="external ugc">Website</a></li><li>Jon Calhoun &ndash; <a href="https://twitter.com/joncalhoun" rel="external ugc">Twitter</a>, <a href="https://github.com/joncalhoun" rel="external ugc">GitHub</a>, <a href="https://www.calhoun.io" rel="external ugc">Website</a></li><li>Carl Johnson &ndash; <a href="https://mastodon.social/@carlmjohnson" rel="external ugc">Mastodon</a>, <a href="https://twitter.com/carlmjohnson" rel="external ugc">Twitter</a>, <a href="https://github.com/carlmjohnson" rel="external ugc">GitHub</a>, <a href="https://carlmjohnson.net/" rel="external ugc">Website</a></li></ul></p> <p>Show Notes:</p> <p><ul> <li>🎥 <a href="https://www.youtube.com/watch?v=5DVV36uqQ4E">GothamGo 2018 - Things in Go I Never Use by Mat Ryer</a></li> <li><a href="https://github.com/golang/go/issues/21291">Carl’s ‘remove naked return’</a></li> <li><a href="https://blog.merovius.de/posts/2017-08-14-why-context-value-matters-and-how-to-improve-it/">The Merovius - Dynamic variables</a></li> </ul> </p> <p>Something missing or broken? <a href="https://github.com/thechangelog/show-notes/blob/master/gotime/go-time-269.md">PRs welcome!</a></p> <p>Timestamps:</p> <p> (00:00) - It's Go Time!<br>(00:58) - ICE BREAKERS<br>(12:00) - Mat avoids new()<br>(17:20) - Jon avoids full slice expressions<br>(20:53) - Carl avoids bare returns<br>(24:22) - A linter up in your kitchen<br>(26:59) - Mat tries not to panic<br>(30:52) - Jon avoids labels<br>(35:1346) - Templates, globals, init<br>(38:40) - Prank Time (+ more bad ideas)<br>(42:57) - Jon tells a story<br>(44:20) - Useless uses of generics<br>(47:41) - Jon doesn't use internal packages<br>(51:17) - It's time for Unpopular Opinions!<br>(51:43) - Mat's unpop<br>(57:56) - Gotta Go!<br>(59:04) - Next time on Go Time<br> </p> ]]>
            </content:encoded>
            <itunes:episodeType>full</itunes:episodeType>
            <itunes:episode>269</itunes:episode>
            <itunes:image href="https://cdn.changelog.com/uploads/covers/go-time-original.png?v=63725770357"/>
            <itunes:duration>1:00:24</itunes:duration>
            <itunes:explicit>no</itunes:explicit>
            <itunes:keywords>go, golang, open source, software, development, devops, architecture, docker, kubernetes</itunes:keywords>
            <itunes:subtitle>with Mat, Jon &amp; Carl</itunes:subtitle>
            <itunes:summary>The panel discuss the parts of Go they never use. Do they avoid them because of pain in the past? Were they overused? Did they always end up getting refactoring out? Is there a preferred alternative? </itunes:summary>
            <dc:creator>Changelog Media</dc:creator>
            <itunes:author>Changelog Media</itunes:author>
            <podcast:transcript url="https://changelog.com/gotime/269/transcript" type="text/html"/>
            <podcast:chapters url="https://changelog.com/gotime/269/chapters" type="application/json+chapters"/>
            <podcast:socialInteract uri="https://changelog.social/@gotime/110033929472581961" protocol="activitypub"/>
        </item>
        <item>
            <title>This will blow your docs off</title>
            <link>https://changelog.com/gotime/268</link>
            <guid isPermaLink="false">changelog.com/2/1980</guid>
            <pubDate>Fri, 10 Mar 2023 16:00:00 +0000</pubDate>
            <enclosure url="https://op3.dev/e/https://cdn.changelog.com/uploads/gotime/268/go-time-268.mp3" length="72506953" type="audio/mpeg"/>
            <description>In a world where most documentation sucks, large language models write better than humans, and people won’t be bothered to type full sentences with actual punctuation. Two men… against all odds… join an award-worthy podcast… hosted by a coin-operated, singing code monkey (?)… to convince the developer world they’re doing it ALL wrong. Grab your code-generator and heat up that cold cup of coffee on your desk. Because this episode of Go Time is about to blow your docs off! </description>
            <content:encoded>
                <![CDATA[ <p>In a world where most documentation sucks, large language models write better than humans, and people won’t be bothered to type full sentences with <em>actual</em> punctuation.</p> <p>Two men… against all odds… join an award-worthy podcast… hosted by a coin-operated, singing code monkey (?)… to convince the developer world they’re doing it ALL wrong.</p> <p>Grab your code-generator and heat up that cold cup of coffee on your desk. Because this episode of Go Time is about to blow your docs off!</p> <p><a href="https://changelog.com/gotime/268/discuss">Discuss on Changelog News</a></p> <p><a href="https://changelog.com/++" rel="payment">Changelog++</a> members save 2 minutes on this episode because they made the ads disappear. Join today!</p> <p>Sponsors:</p> <p><ul> <li><a href="https://fastly.com/">Fastly</a> – <strong>Our bandwidth partner.</strong> Fastly powers fast, secure, and scalable digital experiences. Move beyond your content delivery network to their powerful edge cloud platform. Learn more at <a href="https://www.fastly.com/?utm_source=changelog&amp;utm_medium=podcast&amp;utm_campaign=changelog-sponsorship">fastly.com</a> </li><li><a href="https://fly.io/changelog">Fly.io</a> – <strong>The home of Changelog.com</strong> — Deploy your apps and databases close to your users. In minutes you can run your Ruby, Go, Node, Deno, Python, or Elixir app (and databases!) all over the world. No ops required. Learn more at <a href="https://fly.io/changelog">fly.io/changelog</a> and check out <a href="https://fly.io/docs/speedrun/">the speedrun in their docs</a>. </li><li><a href="https://changelog.com/++">Changelog++</a> – You love our content and you want to take it to the next level by showing your support. We’ll take you closer to the metal with extended episodes, make the ads disappear, and increment your audio quality with higher bitrate mp3s. <a href="https://changelog.com/++">Let’s do this</a>! </li> </ul></p> <p>Featuring:</p> <p><ul><li>Mark Bates &ndash; <a href="https://twitter.com/markbates" rel="external ugc">Twitter</a>, <a href="https://github.com/markbates" rel="external ugc">GitHub</a>, <a href="http://www.metabates.com/" rel="external ugc">Website</a></li><li>Cory LaNou &ndash; <a href="https://twitter.com/corylanou" rel="external ugc">Twitter</a></li><li>Mat Ryer &ndash; <a href="https://twitter.com/matryer" rel="external ugc">Twitter</a>, <a href="https://github.com/matryer" rel="external ugc">GitHub</a>, <a href="https://www.linkedin.com/in/matryer" rel="external ugc">LinkedIn</a>, <a href="http://matryer.com/" rel="external ugc">Website</a></li><li>Johnny Boursiquot &ndash; <a href="https://twitter.com/jboursiquot" rel="external ugc">Twitter</a>, <a href="https://github.com/jboursiquot" rel="external ugc">GitHub</a>, <a href="https://www.jboursiquot.com/" rel="external ugc">Website</a></li></ul></p> <p>Show Notes:</p> <p><ul> <li>a.k.a. “Doc, Stock and Two Smoking Barrels”</li> <li>a.k.a. “Doc-a Schoen”</li> <li>a.k.a. “Like Doc-work”</li> <li>a.k.a. “Pull Your Docs Up”</li> <li>a.k.a. “What’s Up, Docs?”</li> <li>a.k.a. “A Doc-work Orange”</li> </ul> </p> <p>Something missing or broken? <a href="https://github.com/thechangelog/show-notes/blob/master/gotime/go-time-268.md">PRs welcome!</a></p> <p>Timestamps:</p> <p> (00:00) - In a world...<br>(01:29) - It's Go Time!<br>(02:27) - Welcoming our guests<br>(12:06) - Usage docs<br>(20:35) - Maintaining docs<br>(29:10) - Sponsor: Changelog++<br>(30:05) - Don't believe the Hype<br>(36:11) - Document-driven development<br>(40:55) - The bigger takeaways<br>(44:53) - It's time for Unpopular Opinions!<br>(45:53) - Mark's unpop[0]<br>(51:51) - Cory's unpop<br>(58:18) - Mark's unpop[1]<br>(1:02:23) - Mark's unpop[2]<br>(1:03:23) - Johnny's unpop<br>(1:12:05) - Time to Go!<br>(1:13:27) - Next time on Go Time<br> </p> ]]>
            </content:encoded>
            <itunes:episodeType>full</itunes:episodeType>
            <itunes:episode>268</itunes:episode>
            <itunes:image href="https://cdn.changelog.com/uploads/covers/go-time-original.png?v=63725770357"/>
            <itunes:duration>1:14:59</itunes:duration>
            <itunes:explicit>no</itunes:explicit>
            <itunes:keywords>go, golang, open source, software, development, devops, architecture, docker, kubernetes</itunes:keywords>
            <itunes:subtitle>with Mark Bates &amp; Cory LaNou</itunes:subtitle>
            <itunes:summary>In a world where most documentation sucks, large language models write better than humans, and people won’t be bothered to type full sentences with actual punctuation. Two men… against all odds… join an award-worthy podcast… hosted by a coin-operated, singing code monkey (?)… to convince the developer world they’re doing it ALL wrong. Grab your code-generator and heat up that cold cup of coffee on your desk. Because this episode of Go Time is about to blow your docs off! </itunes:summary>
            <dc:creator>Changelog Media</dc:creator>
            <itunes:author>Changelog Media</itunes:author>
            <podcast:transcript url="https://changelog.com/gotime/268/transcript" type="text/html"/>
            <podcast:chapters url="https://changelog.com/gotime/268/chapters" type="application/json+chapters"/>
            <podcast:socialInteract uri="https://changelog.social/@gotime/109999929140401191" protocol="activitypub"/>
        </item>
    </channel>
</rss>